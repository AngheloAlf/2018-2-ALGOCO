#!/usr/bin/env bats

@test "Not found" {
   run ./20182t3p2 'x+glerb' match.c
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 0 ]
}

@test "One '+' matching a single character" {
   run ./20182t3p2 "Pi+ke's" match.c
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 1 ]
   [ "${lines[0]}" = " * @brief Pike's regexp match" ]
}

@test "Several '+' matches" {
   run ./20182t3p2 '^cb+c$' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 2 ]
}

@test "Several '+' in a regexp" {
   run ./20182t3p2 '^ca+b+c$' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 2 ]
}

@test "Mix '*' and '+' in a regexp" {
   run ./20182t3p2 '^ca*b+c$' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 4 ]
}

@test "End line anchor, one char plussed" {
   run ./20182t3p2 'a+$' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 5 ]
}

@test "Plussed dot" {
   run ./20182t3p2 'A .+ garbage' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 3 ]
}

@test "Plussed dot matching several" {
   run ./20182t3p2 '^.+garbage' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 3 ]
}

@test "Line with dots" {
   run ./20182t3p2 'line.+' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 3 ]
}

@test "One '?' matching" {
   run ./20182t3p3 "Pi?ke's" match.c
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 1 ]
   [ "${lines[0]}" = " * @brief Pike's regexp match" ]
}

@test "One '?' not matching" {
   run ./20182t3p3 "Pix?ke's" match.c
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 1 ]
   [ "${lines[0]}" = " * @brief Pike's regexp match" ]
}

@test "Three '?' in a row" {
   run ./20182t3p3 '^bab?b?b?b$' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 2 ]
}

@test "End line anchor, last char '?'" {
   run ./20182t3p3 'a?$' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 21 ]
}

@test "Find '.?'" {
   run ./20182t3p3 'A [.? garbage' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 1 ]
}

@test "No match '.?'" {
   run ./20182t3p3 'A 0.? garbage' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 0 ]
}

@test "Look for '$'" {
   run ./20182t3p4 '\$' testdata2
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 2 ]
}

@test "Look '$' at end of line" {
   run ./20182t3p4 '$$' testdata2
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 1 ]
}

@test "Look for dots" {
   run ./20182t3p4 '\.+' testdata2
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 3 ]
}

@test "Literal '+'" {
   run ./20182t3p4 'A \+ gar' testdata
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 1 ]
}

@test "Literal '...'" {
   run ./20182t3p4 '\.\.\.' testdata2
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 1 ]
}

@test "C comment bar" {
   skip  # Output with '*' gets messed up (bash(1) expansion?)
   run ./20182t3p4 '^/\*\*+/$' testdata2
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 2 ]
}

@test "C comments" {
   skip  # Output with '*' gets messed up (bash(1) expansion?)
   run ./20182t3p4 '^/\*.*\*/$' testdata2
   [ "$status" -eq 0 ]
   [ "${#lines[*]}" -eq 5 ]
}

